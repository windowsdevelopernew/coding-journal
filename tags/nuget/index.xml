<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nuget on Coding Journal</title>
    <link>http://igorkulman.github.io/coding-journal/tags/nuget/</link>
    <description>Recent content in Nuget on Coding Journal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Nov 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://igorkulman.github.io/coding-journal/tags/nuget/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>REST service base class for Windows Phone 8.1 XAML apps</title>
      <link>http://igorkulman.github.io/coding-journal/rest-service-base-class-for-windows-phone-8-1-xaml-apps/</link>
      <pubDate>Mon, 24 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://igorkulman.github.io/coding-journal/rest-service-base-class-for-windows-phone-8-1-xaml-apps/</guid>
      <description>&lt;p&gt;Communicating with a JSON based REST service is a task that many Windows Phone apps have to do. My apps sure do it a lot so I came up with a base class that I use in all of them, &lt;a href=&#34;https://github.com/igorkulman/Kulman.WPA81.BaseRestService&#34;&gt;put it on Github&lt;/a&gt; and &lt;a href=&#34;https://www.nuget.org/packages/Kulman.WPA81.BaseRestService/&#34;&gt;created a Nuget package&lt;/a&gt;, so your apps could use it to.&lt;/p&gt;

&lt;p&gt;The usage of this base class is simple. Create your service class and inherit from BaseRestService. The minimum you need to do to make it work is to override the GetBaseUrl() method to set the base url for all the requests. You can (but do not have to) also override the GetRequestHeaders() method to set the default request headers.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/405732bf92858dba1c3c.js?file=usage1.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;and you can now use the following protected methods&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/405732bf92858dba1c3c.js?file=methods.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;All the JSON serialization and deserialization is automatically done for you. If you need to execute some action before every request (like checking if the OAuth token expired and refreshing it), simply override the OnBeforeRequest() method.&lt;/p&gt;

&lt;p&gt;Methods in your service may then look like this&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/405732bf92858dba1c3c.js?file=usage2.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;In case of an error, the methods throw either a DeserialziationException with the original data if deserialization failed, or a ConnectionException with the HTTP status code.&lt;/p&gt;

&lt;p&gt;if you need some additional features, just raise an issue in the &lt;a href=&#34;https://github.com/igorkulman/Kulman.WPA81.BaseRestService&#34;&gt;Github repo&lt;/a&gt;, or create a pull request.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AutoCompleteBox for Windows Store apps</title>
      <link>http://igorkulman.github.io/coding-journal/autocompletebox-for-windows-store-apps/</link>
      <pubDate>Thu, 29 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://igorkulman.github.io/coding-journal/autocompletebox-for-windows-store-apps/</guid>
      <description>&lt;p&gt;There is no AutoCompleteBox control that can be used when building Windows Store apps in C# and XAML so I decided to create one, because I needed it for a project. Currently it supports only String collections and the selected value must be accessed using code behind, but this will hopefully change.&lt;/p&gt;

&lt;p&gt;The AutoCompleteBox uses &lt;a href=&#34;http://winrtxamltoolkit.codeplex.com/&#34;&gt;WinRT XAML Toolkit&lt;/a&gt; to show the watermark and &lt;a href=&#34;http://msdn.microsoft.com/en-us/data/gg577609.aspx&#34;&gt;Reactive Extensions&lt;/a&gt; so the users does not need to press enter, the results will show after they stop typing for a second.&lt;/p&gt;

&lt;p&gt;The project is hosted on my Bitbucket so you can check it out at &lt;a href=&#34;https://github.com/igorkulman/AutoCompleteBox&#34;&gt;https://github.com/igorkulman/AutoCompleteBox&lt;/a&gt;, forks and code contributions are welcomed. Nuget package is available at &lt;a href=&#34;https://nuget.org/packages/AutoCompleteBoxWinRT&#34;&gt;https://nuget.org/packages/AutoCompleteBoxWinRT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Installation using Nuget:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Install-Package AutoCompleteBoxWinRT
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nancyfx on Coding Journal</title>
    <link>https://github.com/igorkulman/coding-journal/tags/nancyfx/</link>
    <description>Recent content in Nancyfx on Coding Journal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Apr 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://github.com/igorkulman/coding-journal/tags/nancyfx/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using ETag to cache responses in NancyFX</title>
      <link>https://github.com/igorkulman/coding-journal/using-etag-to-cache-responses-in-nancyfx/</link>
      <pubDate>Wed, 15 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://github.com/igorkulman/coding-journal/using-etag-to-cache-responses-in-nancyfx/</guid>
      <description>&lt;p&gt;Caching data is usually a good idea, especially when creating APIs for mobile clients and the user may pay for each transferred byte. There are many approaches to caching data (I recommend reading &lt;a href=&#34;http://frontendplay.com/2013/05/22/http-caching-demystified/&#34;&gt;this article&lt;/a&gt;), in my last NancyFX project I used ETag.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ETag&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ETag is a HTTP header that acts as a hash of the data. When the server returns a response, it computes a hash of the data and sends it to the client. When the client requests the data again, it includes the ETag in its request. The server compares the ETag with the hash of the current data and if they match (the data did not change), it returns an empty responses with a HTTP 304 status code.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/4e6d24d0fedfe8361c6b.js?file=etagresponse.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;NancyFX impelemntation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To implement caching using ETag in NancyFX I use a method in my base module&lt;/p&gt;

&lt;p&gt;There are two parameters in this method, because you may sometimes want to compute the ETag from only a part of the returned model.&lt;/p&gt;

&lt;p&gt;Using this method is the really simple&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/4e6d24d0fedfe8361c6b.js?file=usage.cs&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>NancyFX authentication for REST API</title>
      <link>https://github.com/igorkulman/coding-journal/nancyfx-authentication-for-rest-api/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://github.com/igorkulman/coding-journal/nancyfx-authentication-for-rest-api/</guid>
      <description>&lt;p&gt;NancyFX is a great .NET framework well suited for creating REST APIs. There are many ways how to approach authentication, the simplest one is the good old Forms Authentication. The idea of Forms Authentication is that the user logs in with a username and password and gets a cookie, the protected endpoints then check the cookie. NancyFX supports Forms Authentication with the &lt;a href=&#34;https://www.nuget.org/packages/Nancy.Authentication.Forms/&#34;&gt;Nancy.Authentication.Forms&lt;/a&gt; package. The &lt;a href=&#34;https://github.com/NancyFx/Nancy/wiki/Forms-Authentication&#34;&gt;documentation describes how to use it on a web page&lt;/a&gt;, but to use it with a REST API a few changes are needed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Forms Authentication differences for REST API&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are things you want to do differently in a REST API than on a web page. If a user tries to access a protected endpoint, the Forms Authentication on a normal web page redirects him to the login page. In REST API, you typically want the endpoint just to return HTTP 401, no redirects. Also, when a user successfully logs in, you just typically want to return HTTP 200, no redirects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disabling redirects&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Suppose you have Forms Authentication set up according to the documentation, with a IUserMapper and IUserIdentity implementation. Disabling the redirects is easy, just set a flag on the FormsAuthenticationConfiguration in your Bootstrapper:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/2430a948fe6c426cdd01.js?file=Bootstrapper.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Changing Login and Logout methods&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The login implementation from the documentation uses the LoginAndRedirect method. There is also LoginWithoutRedirect method you want to use, but I found out it does not set the authentication cookie (when it does not think the request is an AJAX request), so the login basically does not work. A workaround I found is to call the LoginAndRedirect method, but only get the authentication cookie from the response ad return it manually:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/2430a948fe6c426cdd01.js?file=login.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;The logout implementation just needs to call LogoutWithoutRedirect and return HTTP 200:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/2430a948fe6c426cdd01.js?file=logout.cs&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Returning files in NancyFX</title>
      <link>https://github.com/igorkulman/coding-journal/returning-files-in-nancyfx/</link>
      <pubDate>Wed, 02 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://github.com/igorkulman/coding-journal/returning-files-in-nancyfx/</guid>
      <description>&lt;p&gt;In my current project, I have chosen &lt;a href=&#34;http://nancyfx.org/&#34;&gt;NancyFx&lt;/a&gt; to implement a REST API. NancyFx is a .NET framework known for its &amp;#8220;&lt;a href=&#34;https://github.com/NancyFx/Nancy/wiki/Introduction#the-super-duper-happy-path&#34;&gt;super-duper-happy-path&lt;/a&gt;&amp;#8220;.&lt;/p&gt;

&lt;p&gt;In one use case I generate a ZIP file in the temp folder and I want the API to return this ZIP file. NancyFx contains a Responses.AsFile helper but it works only with paths relative to the application.&lt;/p&gt;

&lt;p&gt;If you have an absolute path of a file, you cannot use it. You need to create a StreamResponse and return the file as an attachment&lt;/p&gt;

&lt;p&gt;&lt;script src=&#34;https://gist.github.com/6791265.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
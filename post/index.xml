<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Coding Journal</title>
    <link>http://blog.kulman.sk/post/</link>
    <description>Recent content in Posts on Coding Journal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Dec 2015 09:29:12 +0100</lastBuildDate>
    <atom:link href="http://blog.kulman.sk/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Mobilize.net: Converting Windows Phone 8 apps to UWP? Not really</title>
      <link>http://blog.kulman.sk/mobilize-net-converting-windows-phone-apps-to-uwp</link>
      <pubDate>Fri, 18 Dec 2015 09:29:12 +0100</pubDate>
      
      <guid>http://blog.kulman.sk/mobilize-net-converting-windows-phone-apps-to-uwp</guid>
      <description>&lt;p&gt;When Microsoft announced the Windows 10 developer platform, they also announced bridges to make porting apps from Android, iOS and Web easier. Those bridges are now either dead (Android) or unusable (iOS) but there is another tool that can be considered a bridge left. It is called &lt;a href=&#34;http://www.mobilize.net/download-silverlight-bridge&#34;&gt;Mobilize.net Silverlight&lt;/a&gt; Bridge and it is not from Microsoft. It promises converting existing Windows Phone 8 (Silverlight apps) to the Universal Windows Platform. Considering the majority of apps in the Windows Phone Store are Windows Phone 8 apps and the fact that Android and iOS developers do not really care about Windows, Mobilize.net seem to be the most useful of the bridges, because there is no easy porting apps from Windows Phone 8 to UWP, just rewriting. So I tried it out.&lt;/p&gt;

&lt;img src=&#34;http://blog.kulman.sk/images/Windows10-Devices.png?t=1449725816496&amp;amp;width=425&amp;amp;height=210&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;Mobilize.net is currently in technical preview. After you download and install it, it integrates into Visual Studio 2015 and there is a new context menu for Windows Phone 8 project, allowing you to convert them to UWP apps. If you use it, you get a dialog windows and a conversion process that will fail most of the times with a strange error. At least for me it did.&lt;/p&gt;

&lt;p&gt;I got in touch with their support and I found out the reason for the conversion always failing. They do not support C# 6 all and mine, and probably all yours, project use C# 6. If you look at the error logs a bit closer, you will see error messages about failed tokenization. This is really strange, it looks like they are parsing the source code as text, instead of just using Roslyn. I do not get why, but they probably have a reason for this.&lt;/p&gt;

&lt;p&gt;If you go through all the trouble and remove all the C# 6 features from your project, the conversion will succeed. You will get a UWP project, that will most likely not compile. There are two main reasons for this.&lt;/p&gt;

&lt;p&gt;Mobilize.net changes your XAML to fix namespaces and replace controls that changed since Windows Phone 8, but it does not fix XAML features that were not available in UWP. And there are quite a few of them, from StringFormat in bindings to OpacityMask on images. You will have to fix your XAML manually and while you are at this, you will also have to rewrite your XAML to accommodate for the fact that there is not just one fixed resolution like it was in Windows Phone 8. Your XAML has to be responsive now. Mobilize.net did not really help here.&lt;/p&gt;

&lt;p&gt;The seconds problem are third party libraries. There are &lt;a href=&#34;https://github.com/MobilizeNet/UWPConversionMappings&#34;&gt;some mappings available for popular third party libraries&lt;/a&gt;. This mapping do two things. First they make sure the UWP project uses the correct Nuget packages and then they map namespaces, both in XAML and C#, that changed when the third party library transitioned from Windows Phone 8 to UWP. Chances are that there are no UWP versions of some or even the majority of the third party libraries you use. Probably because the functionality is nor longer available all the API has completely changed.&lt;/p&gt;

&lt;p&gt;I reached out to the Mobilize.net support asking about these two things, but I never got an answer.&lt;/p&gt;

&lt;p&gt;In conclusion, if your app is not trivial, you use C# 6, third party libraries and all the available XAML features, your experience will not be very good. If you app is well written (MVVM, abstractions) your are better with creating a new UWP project, pasting your code and rewriting your XAML. If your app is more trivial, Mobilize.net will probably work well for you. But in this case, rewriting your app to UWP without it would be probably takes the same amount of time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Detecting gestures over WebView on Windows Phone</title>
      <link>http://blog.kulman.sk/detecting-gestures-over-webview-on-windows-phone/</link>
      <pubDate>Mon, 07 Dec 2015 09:29:12 +0100</pubDate>
      
      <guid>http://blog.kulman.sk/detecting-gestures-over-webview-on-windows-phone/</guid>
      <description>&lt;p&gt;If you develop Windows Phone apps, you surely had to use the WebView component at least once. Any you must have realized, that it kind of sucks. One of the problems is that it swallows all the gestures and manipulation events. This means you cannot put it into a Pivot, you cannot detect swipe left or right events to navigate to next or previous article .. or can you?&lt;/p&gt;

&lt;p&gt;In a recent project, I had to implement exactly the mentioned functionality, swiping between articles displayed in a WebView. I did some research and I could not find any solution. So I had to get creative and I find a way involving JavaScript.&lt;/p&gt;

&lt;p&gt;The idea was simple. If you cannot recognize the swipe event over the WebView in your C#/XAML, why not try to recognize them in the WebView? I did some research and found a JavaScript library that works on Windows Phone. The library is &lt;a href=&#34;https://hammerjs.github.io/&#34;&gt;Hammer&lt;/a&gt; and it recognizes all the basic gestures, including swiping left and right.&lt;/p&gt;

&lt;p&gt;First you include Hammer into your HTML, then you set it up to listen over an HTML element and lastly you subscribe to events you are interested in. The only reasonable action you can execute is notify the WebView using the &lt;code&gt;window.external.notify&lt;/code&gt; function.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/f7c559775ef3e57906ed.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;The C#/XAML part of the solution consists just of handling the WebView&amp;rsquo;s &lt;code&gt;ScriptNotify&lt;/code&gt; event and implementing your action according to the value you receive.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The sad state of DVLUP (MS Tech Rewards)</title>
      <link>http://blog.kulman.sk/the-sad-state-of-dvlup-ms-tech-rewards/</link>
      <pubDate>Wed, 25 Nov 2015 12:41:12 +0100</pubDate>
      
      <guid>http://blog.kulman.sk/the-sad-state-of-dvlup-ms-tech-rewards/</guid>
      <description>&lt;p&gt;If you are a Windows Phone developer you must know DVLUP. It was a program for developers developed by Nokia. The idea was simple. Do Windows Phone development related challenges, make your apps better thanks to them, get points, exchange points for rewards. Sounds good, does it not?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interesting, but location dependent&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The problem with DVLUP was that it was location dependent. It opened in my countries maybe two years after US and developers from other &amp;ldquo;more important&amp;rdquo; countries could participate. The challenges were also location dependent, showing me only a small subset in my country. But they were interesting. They made me implement some new stuff into my apps that I would not do otherwise. And I got points for doing them. When I wanted to exchange the points for some rewards, there were not that many available in my country. No phones or other hardware like in the US. A Steam gift card was the only useful think that I could get. But I did not mind, I liked doing the challenges.&lt;/p&gt;

&lt;p&gt;And then Microsoft bought Nokia and slowly DVLUP turned into MS Tech Rewards.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pushing Universal Apps too hard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Recently, all the challenges changed to challenges for Windows 10 apps only. They do not seem to care that most of the Windows Phone apps in the Store or in the works are for 8 or 8.1. Rewriting 8 and 8.1 apps that work well on 10 is simply not feasible. To me its seems like pushing Universal Apps too hard, ignoring the developers that invested in the Windows Phone platform in the beginning and created apps before Universal Apps were a thing.&lt;/p&gt;

&lt;p&gt;Sure, they will tell you that making a 8 or 8.1 app into a 10 app is not rewriting, but porting. They can even argue with you about this on Twitter. But you know better. Maybe you are fed up of rewriting, you did it from 7 to 8 and from 8.1 ..&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;More stupid challenges, new rules, still not good rewards&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I think that making all the challenges for Windows 10 apps only made the developer participate a lot less. Otherwise they would not come with the new stupid rules. One of the rules is that you have to participate challenges with a given period, otherwise your earned points (the points you cannot spend on anything useful) would expire!&lt;/p&gt;

&lt;p&gt;Some of the DVLUP challenges were making you to implement unique Windows Phone features to your apps. It sometimes looked a bit forceful, but generally it was ok. Now that Windows 10 Mobile lost all of the Windows Phone unique features, the challenges are getting really stupid sometimes. Just take a look at a challenge called &lt;a href=&#34;https://rewards.msdn.microsoft.com/Challenge/1c0a75a4-e198-4d52-9be2-5f9d2279848c&#34;&gt;Give Your Windows 10 App a Festive Holiday Glow&lt;/a&gt;. Reminds me of times when people put JavaScript snow on their websites in Winter. About 15 years ago. And it looks like I am not the only one who thinks it is really stupid&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Oh god no &lt;a href=&#34;https://twitter.com/MSTechRewards&#34;&gt;@MSTechRewards&lt;/a&gt; please don&amp;#39;t make people do shitty stuff like this &lt;a href=&#34;https://t.co/Pmm4ofyT5c&#34;&gt;https://t.co/Pmm4ofyT5c&lt;/a&gt;&lt;/p&gt;&amp;mdash; Morten Nielsen (@dotMorten) &lt;a href=&#34;https://twitter.com/dotMorten/status/667743323633774592&#34;&gt;November 20, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;For me, DVLUP is dead, I really do not want to rewrite my apps for Windows 10 and add Christmas theming to them. It makes me sad it ended this way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Going static: From Wordpress to Hugo</title>
      <link>http://blog.kulman.sk/going-static-from-wordpress-to-hugo</link>
      <pubDate>Mon, 23 Nov 2015 13:13:55 +0100</pubDate>
      
      <guid>http://blog.kulman.sk/going-static-from-wordpress-to-hugo</guid>
      <description>&lt;p&gt;As you may have noticed, &lt;a href=&#34;http://www.smashingmagazine.com/2015/11/modern-static-website-generators-next-big-thing/?utm_content=buffer882bd&amp;amp;utm_medium=social&amp;amp;utm_source=twitter.com&amp;amp;utm_campaign=buffer&#34;&gt;static site generation is the next big think&lt;/a&gt;. When I created this blog a few years ago I choose Wordpress, because it seemed like a good choice. Now I have grown tired with updating plugins, exchanging broken plugins for alternative ones and so one. So I decided to try to go the static site generation route to make the blog easier to maintain.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jekyll? Octopress? FsBlog? Hugo!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are &lt;a href=&#34;https://www.staticgen.com/&#34;&gt;quite a few static site generators&lt;/a&gt; out there, so choosing the right one is quite a challenge. &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; or &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt; seemed like the obvious choice. Jekyll requires Ruby, which is ok even on Windows, but Octopress had a few dependencies that I did not manage to get working on Windows. &lt;a href=&#34;https://github.com/fsprojects/FsBlog&#34;&gt;FsBlog&lt;/a&gt; seemed interesting, especially for me being a F# enthusiast, but frankly it is not yet very usable. So I choose Hugo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; is a static site generator written in Go. That means no dependencies, just one binary you download and use. On Windows, you can even &lt;a href=&#34;https://chocolatey.org/packages/hugo&#34;&gt;get it using Chocolatey&lt;/a&gt;. It has a &lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;nice tutorial&lt;/a&gt;, a lively community and a few ready made themes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Getting the content from Wordpress&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are coming to Hugo from Wordpress, there is a &lt;a href=&#34;https://github.com/SchumacherFM/wordpress-to-hugo-exporter&#34;&gt;plugin to export all the content for you&lt;/a&gt;. The only problem with the plugin is that it completely ignores Gists you reference in your posts. So after you export your posts, you have to manually edit one by one and add the Gists. Some Hugo themes offer you ready made shortcodes for embedding Gists.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hosting on Github Pages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the things I wanted to try after switching to a static website was hosting it on &lt;a href=&#34;https://pages.github.com/&#34;&gt;Github Pages&lt;/a&gt;, because the Git deployment story is more comfortable than copying or syncing the generated content over FTP to my hosting provider. Github Pages also offer kind of a CDN for your content. Setting it all up is not very complicated, there is a &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34;&gt;tutorial in Hugo documentation that will walk you through the process&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, there are a few limitations when using with Github Pages. There are no redirects, so I could not redirect my RRS feed to the new one. A much bigger problem is that there is no way to set caching time for static resources like CSS and JS files.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Enabling and disabling hardware devices with PowerShell</title>
      <link>http://blog.kulman.sk/enabling-and-disabling-hardware-devices-with-powershell/</link>
      <pubDate>Fri, 06 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kulman.sk/enabling-and-disabling-hardware-devices-with-powershell/</guid>
      <description>&lt;p&gt;I have a built-in fingerprint reader on my Thinkpad notebook that I use for loging in almost exclusively. I say almost because since I upgraded to Windows 10 it sometimes just stops working when the computer wakes up from sleep. I found out that to make it work again I have to go to the Device Manager, find it, disable it and enabled it back again.&lt;/p&gt;

&lt;p&gt;Of course, I was looking for a way to automate this, because I do not think that this issue will be fixed any time soon by Microsoft or Lenovo. I found out there is a &lt;a href=&#34;https://gallery.technet.microsoft.com/Device-Management-7fad2388&#34;&gt;PowerShell cmdlet that expose device enumeration and management APIs&lt;/a&gt;. Using this cmdlet I wrote a simple PowerShell script to the the work.&lt;/p&gt;

&lt;p&gt;It has to be run with administrator privileges to work. Maybe I will go one step further and make this script run each time the notebook wakes up, just to be sure.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/3bea04333c0b47156c68.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Visual Studio extensions to make your life easier</title>
      <link>http://blog.kulman.sk/visual-studio-extensions-to-make-your-life-easier/</link>
      <pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kulman.sk/visual-studio-extensions-to-make-your-life-easier/</guid>
      <description>&lt;p&gt;This blog post is inspired by the &lt;a href=&#34;http://hmemcpy.com/2015/10/7-open-source-visual-studio-extensions-to-make-your-life-easier/&#34;&gt;7 open-source Visual Studio Extensions to make your life easier&lt;/a&gt; article. In the article Igal Tabachnik showed his favorite Visual Studio extensions, that were quite interesting. I also use a few Visual Studio extensions that make my life easier, so I decided to share.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://visualstudiogallery.msdn.microsoft.com/e792686d-542b-474a-8c55-630980e72c30&#34;&gt;Indent Guides&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Small and simple extension with just one task, displaying indent and page width guides in Visual Studio text editor windows. There are three styles of guides: solid, dotted and dashed, available in thin and thick varieties and customizable color.&lt;/p&gt;

&lt;img src=&#34;http://blog.kulman.sk/images/guides.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.visualstudiogallery.msdn.microsoft.com/f4d9c2b5-d6d7-4543-a7a5-2d7ebabc2496&#34;&gt;VSColorOutput&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;VSColorOutput can change the color of a line emitted to the output window based on specified rules. The rules consist of regular expressions. Rules map to classifications which in turn map to colors. The default patterns will color build errors in red, warnings in yellow/gold and successful build messages in green. It also colors the output of debug messages when running an app, so you can easily sort exceptions and your custom debug messages containing certain words.&lt;/p&gt;

&lt;img src=&#34;http://blog.kulman.sk/images/vscoloroutput.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://visualstudiogallery.msdn.microsoft.com/f3f23845-5b1e-4811-882f-60b7181fa6d6&#34;&gt;Rename Visual Studio Windows Title&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By default, Visual Studio shows the name of the opened solution name in the title. This makes it easier to navigate among multiple instances of Visual Studio. You see the solution name next to the Visual Studio icon in the taskbar and also in the task manager, when you have to (and we all sometimes have to) kill the right Visual Studio because it stopped responding. You can use it with Git and show the branch or any other info. For more information about this extension, see a &lt;a href=&#34;http://blog.kulman.sk/quick-tip-showing-solution-branch-name-in-visual-studio-title/&#34;&gt;separate blog post I wrote&lt;/a&gt;.&lt;/p&gt;

&lt;img src=&#34;http://blog.kulman.sk/images/trayalya.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://visualstudiogallery.msdn.microsoft.com/03448836-db42-46b3-a5c7-5fc5d36a8308&#34;&gt;AsyncFixer&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AsyncFixer helps developers in finding and correcting 3 common async/await misuses. AsyncFixer was tested with hundreds of C# apps and successfully handles many corner cases. AsyncFixer will work just in the IDE and work as an analyzer on every project you open in Visual Studio. It can also operate in batch mode to correct all misuses in the document, project, or solution.&lt;/p&gt;

&lt;img src=&#34;http://blog.kulman.sk/images/asyncfixer-1.gif&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;[10]: &lt;a href=&#34;https://i1.visualstudiogallery.msdn.s-msft.com/03448836-db42-46b3-a5c7-5fc5d36a8308/image/file/154241/1/asyncfixer-1.gif&#34;&gt;https://i1.visualstudiogallery.msdn.s-msft.com/03448836-db42-46b3-a5c7-5fc5d36a8308/image/file/154241/1/asyncfixer-1.gif&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lenovo, why do you screw Thinkpads with every update?</title>
      <link>http://blog.kulman.sk/lenovo-why-do-you-screw-thinkpads-with-every-update/</link>
      <pubDate>Wed, 21 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kulman.sk/lenovo-why-do-you-screw-thinkpads-with-every-update/</guid>
      <description>&lt;p&gt;I have a Lenovo Thinpad T440s that I got about a year ago after a great experience with a company issued Lenovo Thinkpad T420 I used for about two and half years before that. I use it daily for on-site work, not so much at home, where I have a desktop computer. The T440s is thinner and lighter than T420, but otherwise everything is just worse. You cannot change RAM or disk so easily as on the T420, the keyboard and trackpoint are worse (the trackpoint does not have physical buttons like on the T420 but &lt;a href=&#34;http://camerongray.me/2015/02/fitting-physical-trackpoint-buttons-to-a-lenovo-thinkpad-t440s/&#34;&gt;I had it replaced for one that does&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;So why did I get the T440s? Because it seemed like a wise choice at the time, compared to the competition. It has a trackpoint, fingerprint reader, a keyboard with all the keys in the right place and it is, after all, a Thinkpad, a sturdy and reliable work machine build from good materials.&lt;/p&gt;

&lt;p&gt;But not really. As every Thinkpad fan can tell you, the quality of Thinkpads is declining (even when not counting the plastic Thinkpad Edge computers that are not &amp;#8220;real&amp;#8221; Thinkpads). It seems like Lenovo simply does not care, making the hardware worse and software even more so. Gone are the superb ThinkVantage tools, only the Thinkpad update utility remained. And it often install software and drivers that can screw up your computer. It happened to many times, this is the latest incident.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Security BIOS update&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The latest problem is with a BIOS update. Lenovo releases BIOS 2.35 for my T440s, fixing a &lt;a href=&#34;https://support.lenovo.com/us/en/product_security/smm_attack&#34;&gt;SMM &amp;#8220;Incursion&amp;#8221; Attack&lt;/a&gt;. The BIOS update as pushed to me as critical using the Thinkpad update tools and fixing security problems is always a good thing. So I installed it. And problems started.&lt;/p&gt;

&lt;p&gt;When I put the computer to sleep and it went from sleep to hibernation after 180 minutes (default settings), the computer started to beep madly and hung on a black screen. Not really a good sight.&lt;/p&gt;

&lt;p&gt;I figured it must be because of the BIOS update, so I went to the Lenovo website to download the previous BIOS update. I downloaded BIOS 2.34 and could not installed it because of I strange error. Then I noticed this note in the BIOS 2.35 changelog: &lt;strong&gt;&amp;#8220;If the UEFI BIOS has been updated to version 2.35 or higher, it is no longer able to roll back to the version before 2.35 for security improvement.&amp;#8221;&lt;/strong&gt;. So my computer got screwed. I had a problematic BIOS and could not downgrade. Great work Lenovo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Insecure workaround&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I did some research and [found out that the problem is related to the TPM chip][3]. I use the TPM chip with BitLocker in Windows 10, so It looked like it maybe be the problem.&lt;/p&gt;

&lt;p&gt;So I turned off BitLocker, waited for my disk do get decrypted and disabled the TPM in BIOS. I put the computer to sleep, waited for it to go to hibernation, and nothing happened. No beeps, no problems, the computer woke normally.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So now I have a BIOS (that I cannot get rid of) with the security fix for an obscure issue but my disk is not encrypted and when I loose my computer or it gets stolen, anyone can read my data. Again, great work Lenovo. Time to install TrueCrypt I guess.&lt;/p&gt;

&lt;p&gt;[3]: &lt;a href=&#34;https://forums.lenovo.com/t5/ThinkPad-T400-T500-and-newer-T/T440s-beeps-while-putting-in-sleep-mode-and-a-blank-screen/m-p/2191866&#34;&gt;https://forums.lenovo.com/t5/ThinkPad-T400-T500-and-newer-T/T440s-beeps-while-putting-in-sleep-mode-and-a-blank-screen/m-p/2191866&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Highlighting letters in TextBlock in Windows Phone 8.1 and Windows 8.1</title>
      <link>http://blog.kulman.sk/highlighting-letters-in-textblock-in-windows-phone-8-1-and-windows-8-1/</link>
      <pubDate>Sat, 17 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kulman.sk/highlighting-letters-in-textblock-in-windows-phone-8-1-and-windows-8-1/</guid>
      <description>&lt;p&gt;In my current project I had to implement an interesting feature for both Windows Phone 8.1 and Windows 8.1 project of the Universal app. The idea is simply. The users want to search for a movie. They enter a search term into a TextBox and a list of results is shown. The results should have the search term highlighted in them.&lt;/p&gt;

&lt;img src=&#34;http://blog.kulman.sk/images/highlighting.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;The standard TextBlock used to display the movie titles does not support any kind of letter highlighting, so I had to write a custom one. I created a custom UserControl. The UserControl contains a few dependency properties Text, HighlightedText, HighlightBrush and a TextBlock. When Text or HighlightedText change, the Text is then split into multiple Runs that are added to the TextBlock.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/87b051f2f3a54bf895f0.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;The whole working custom control is available at Github: &lt;a href=&#34;https://github.com/igorkulman/Kulman.WPA81.HighlightTextBox&#34;&gt;https://github.com/igorkulman/Kulman.WPA81.HighlightTextBox&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Strange combination of HTTPS and Windows Phone 8.1 that can make your app and phone freeze</title>
      <link>http://blog.kulman.sk/strange-combination-of-https-and-windows-phone-8-1-that-can-make-your-app-and-phone-freeze/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kulman.sk/strange-combination-of-https-and-windows-phone-8-1-that-can-make-your-app-and-phone-freeze/</guid>
      <description>&lt;p&gt;Last week I came upon a really bizarre problem that you may also find interesting. Lets start with a bit of context.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tl;Dr&lt;/strong&gt;: There seems to be a bug in Windows phone 8.1 that can make your app and the phone freezes when displaying images over HTTPS from some servers. Skip to &lt;a href=&#34;#bug&#34;&gt;the end of this article&lt;/a&gt; to see a video and get the source code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Windows Phone app&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The app is a Windows Phone 8 shopping app for the biggest Czech online retailer. The main screen of the app contains quite a bit of data, usually about ten carousel with about 10 products and the list of main categories, so about 10 more images.&lt;/p&gt;

&lt;p&gt;In worst case the main screen contains over 10 hundred images. It was quite a hassle to make it work well in the Windows Phone 8 SDK (no, rewriting a shopping about with about 70 screens to Windows Phone 8.1 is not feasible). But it work juts fine. Until last week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The problem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last week, users started to report that the app freezes on the main screen, sometime making the whole phone freeze. This was really bad. Frozen app means not only angry customers but customer that do not buy stuff. So I started to investigate.&lt;/p&gt;

&lt;p&gt;First I thought there may be a problem in the app, although the app was last updated more than a month ago and the problem started only last week. Everything worked fine in the emulator, the problem was reproducible only on real devices. I tried showing only one carousel to make the app render much less data, did not help. I tried making the app show only one product in the only one carousel, still a problem. So it looked like the images were the problem. I tried replacing all the real image urls with random images from [lorempixel.com][2] and the app worked just fine.&lt;/p&gt;

&lt;p&gt;I determined that the source of the problems are the images on the server. Talking with the server customer&amp;#8217;s people I found out that the images on the server were exchanged for bigger one because of the iPhones. But it did not make sense. I tried using much bigger random images and the app worked fine. I tried downloading the images and using them locally, the app worked fine.&lt;/p&gt;

&lt;p&gt;&lt;strong id=&#34;bug&#34;&gt;Windows Phone 8.1 bug?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Finally I found out that the app worked the whole time on phones with Windows 10, only phones with Windows Phone 8.1 were affected. Android and iOS apps that the customer has also never experienced this problem. This make me thing that there is some kind of bug in Windows Phone 8.1 that causes this behavior, because the app does not do any image processing, it only uses an Image control and sets is Source url.&lt;/p&gt;

&lt;p&gt;Here is a sample app to reproduce the problem: &lt;a href=&#34;https://github.com/igorkulman/WindowsPhoneHttpsImageBug&#34;&gt;https://github.com/igorkulman/WindowsPhoneHttpsImageBug&lt;/a&gt;. The solution contains a Windows Phone 8 project and a Windows Phone 8.1. Both apps suffer from the sample problem, but the problem is worse in the Silverlight app. This also makes me think that this is a Windows Phone 8.1 bug, independent on the Windows Phone SDK version.&lt;/p&gt;

&lt;p&gt;I made a video using the sample app showing the problem&lt;/p&gt;

&lt;div class=&#34;embed video-player&#34;&gt;
&lt;iframe src=&#34;http://player.vimeo.com/video/138747871&#34; width=&#34;640&#34; height=&#34;385&#34; frameborder=&#34;0&#34; webkitAllowFullScreen mozallowfullscreen allowFullScreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;[2]: &lt;a href=&#34;http://lorempixel.com&#34;&gt;http://lorempixel.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Microsoft’s Outlook on Android and iOS</title>
      <link>http://blog.kulman.sk/microsofts-outlook-on-android-and-ios/</link>
      <pubDate>Thu, 10 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kulman.sk/microsofts-outlook-on-android-and-ios/</guid>
      <description>&lt;p&gt;To those who don’t know, Microsoft launched several months ago Outlook for Android and iOS phones and tablets. Microsoft’s new brand of Outlook have replace the failing “Outlook-branded apps” that are only available to the current subscribers of Office 365. The upheaval comes after Microsoft acquired San Francisco-based company, &lt;a href=&#34;https://www.acompli.com/&#34;&gt;Acompli.com&lt;/a&gt;.&lt;/p&gt;

&lt;img src=&#34;http://blog.kulman.sk/images/Outlook-Best-New-Apps.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;Acompli is an “advanced email application that empowers professionals to do more with emails, full calendaring, easy file sharing and log all the important people in one email format.” The format supports Microsoft’s Office 365, Gmail and Google Apps.&lt;/p&gt;

&lt;p&gt;Microsoft’s plan is for both the Accompli and the new Outlook app to replace the rather dated Outlook-branded apps. The newfangled Outlook app is primarily based on the technology from the Acompli app that the company acquired for $200 million. Microsoft stated that it was a major factor in buying the app, as its staff could then make up the core group of engineers needed to drive the new Outlook app forward.&lt;/p&gt;

&lt;p&gt;It’s no surprise that Microsoft is shifting its focus from PC-installed base as &lt;a href=&#34;http://www.geekwire.com/2014/flurry-report-mobile-phones-162-minutes/&#34;&gt;GeekWire.com&lt;/a&gt; reports that a study showed Americans spend approximately 162 minutes a day on their phones browsing. And with Gaming Realms, the developer behind the entertainment medium [PocketFruity.com][4], claiming that the global smartphone use has now reached 17%, apps are seeing a spike regarding financial investments and support.&lt;/p&gt;

&lt;p&gt;It will be interesting to see how well the new Outlook app is received after a year or so. With the app retaining many of the features that its recent acquisition Acompli successfully exhibited, there’s a possibility that the consumer base may just stay with the Acompli until Outlook perfects the new app further, and add features that will set it apart from other leading email applications.&lt;/p&gt;

&lt;p&gt;[4]: &lt;a href=&#34;https://www.pocketfruity.com/casino&#34;&gt;https://www.pocketfruity.com/casino&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Problems getting paid from the Windows Store, again</title>
      <link>http://blog.kulman.sk/problems-getting-paid-from-the-windows-store-again/</link>
      <pubDate>Tue, 21 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kulman.sk/problems-getting-paid-from-the-windows-store-again/</guid>
      <description>&lt;p&gt;I do not make much money on my Windows Phone apps (who does?), but when the payout time comes every couple of months, I expect the money to be delivered. Dealing with Microsoft, I should know better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Failed payment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last month I looked into the Dev Center and saw that my scheduled payment failed, telling me to contact the support. So I did. The result was one moth of exchanging email without a solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dealing with support&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Microsoft employee told me that I am in a small group of people with this problem. I do not know if I have such a bad look always be in a problematic supposedly small group, or that the group are not that small. He told me that Microsoft will retry the payment. The payment was supposedly retried on June 24th and succeeded. So they say.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Great news, your June payout was returned due to an internal issue; however, the payout of 5264.17 CZK has been re-attempted and was successfully completed on June 24th. If you have not received the payout then please review this transaction with your bank. Please let me know if you have any further questions.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I never got the money. The employee asked me a few times if I got the money and then resigned, telling me that it is my problem and I should check with my bank. Of course I checked with my bank, they do not have the money. If they had, they would transfer it to my account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will it happen again?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So the support is not helpful, I think I will never see this money and I can just hope the next payment in a couple of months will be successful. Will it?&lt;/p&gt;

&lt;p&gt;I took a look at my payout settings in the new Dev Center and it is a mess&lt;/p&gt;

&lt;img src=&#34;http://blog.kulman.sk/images/payout.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;It previous pages is telling my that everything is ok and my data is valid, but is it? Those four radios do not give me the confidence to believe it. Especially seeing my old account (x3168) that was there in the Windows Store and I deleted it. I used to get the payment to the x0026 account that was in my Windows Phone Store account.&lt;/p&gt;

&lt;p&gt;Funny thing about this form, I never found out how to delete this old account. If you select it, you can only edit it, no way to delete it. If I select the correct account and click save, nothing changes, the radios all remain unselected. I do now know it is a bug or another great Microsoft UI.&lt;/p&gt;

&lt;p&gt;So I guess maybe the next payment will also get lost somewhere ..&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quick Tip: Showing solution branch name in Visual Studio title</title>
      <link>http://blog.kulman.sk/quick-tip-showing-solution-branch-name-in-visual-studio-title/</link>
      <pubDate>Tue, 21 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kulman.sk/quick-tip-showing-solution-branch-name-in-visual-studio-title/</guid>
      <description>&lt;p&gt;By default, Visual Studio shows the name of the opened solution name in the title. This makes it easier to navigate among multiple instances of Visual Studio. You see the solution name next to the Visual Studio icon in the taskbar and also in the task manager, when you have to (and we all sometimes have to) kill the right Visual Studio because it stopped responding.&lt;/p&gt;

&lt;p&gt;I work with Git, switching branches frequently, especially working on features and bug fixes. In this situation, it would be nice if Visual Studio showed not only the solution name but also the current branch in its title. No problem, there is an extension for that.&lt;/p&gt;

&lt;p&gt;The extension is called [Rename Visual Studio Window][1] and it works with Visual Studio 2015, 2013, 2012, 2010. This extension supports Git, so you can easily add the branch name to the title with a config like mine using [gitBranchName].&lt;/p&gt;

&lt;img src=&#34;http://blog.kulman.sk/images/rename.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;Your taskbar will then look like this&lt;/p&gt;

&lt;img src=&#34;http://blog.kulman.sk/images/trayalya.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;[1]: &lt;a href=&#34;https://visualstudiogallery.msdn.microsoft.com/f3f23845-5b1e-4811-882f-60b7181fa6d6&#34;&gt;https://visualstudiogallery.msdn.microsoft.com/f3f23845-5b1e-4811-882f-60b7181fa6d6&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Implementing Google login in Universal Apps</title>
      <link>http://blog.kulman.sk/implementing-google-login-in-universal-apps/</link>
      <pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kulman.sk/implementing-google-login-in-universal-apps/</guid>
      <description>&lt;p&gt;In a recent project I had to implement Google login to an Universal App. I decided to use the native &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows.security.authentication.web.webauthenticationbroker.aspx&#34;&gt;WebAuthenticationBroker&lt;/a&gt; control and the implementation was not as straightforward as I hoped. By implementing Google login I mean getting the authentication token that you can then use with your server API.&lt;/p&gt;

&lt;p&gt;WebAuthenticationBroker is a good idea but it is implemented rather poorly. It works differently on Windows 8.1 and Windows Phone 8.1 due to the &amp;#8220;AndContinue&amp;#8221; pattern that Windows Phone 8.1 forces on you. You can solve this with &lt;a href=&#34;http://blog.kulman.sk/why-universal-apps-as-not-as-universal-as-you-may-think/&#34;&gt;some ifdefs and platform specific code, as always&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The real problem s that the [MSDN sample][3] states it works with Google login but it does not. The sample thinks it gets the authentication token but it does not, it just gets the success code that you have to exchange for the authentication token yourself.&lt;/p&gt;

&lt;p&gt;Lets start with a basic config&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/65a406f7f3cff48be3c5.js?file=config.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;The important things here are your Google app id and Google app secret. The GoogleStartUri also contains permissions that you want to get (profile, &lt;a href=&#34;https://www.googleapis.com/auth/plus.login&#34;&gt;https://www.googleapis.com/auth/plus.login&lt;/a&gt; and &lt;a href=&#34;https://www.googleapis.com/auth/plus.me&#34;&gt;https://www.googleapis.com/auth/plus.me&lt;/a&gt; email in my case).&lt;/p&gt;

&lt;p&gt;You use this config with a WebAuthenticationBroker call&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/65a406f7f3cff48be3c5.js?file=login.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;on Windows 8.1 you get the response data immediately. On Windows Phone 8.1, you have to implement the &amp;#8220;AndContinue&amp;#8221; pattern.&lt;/p&gt;

&lt;p&gt;You use the response data to parse out the success code&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/65a406f7f3cff48be3c5.js?file=GetGoogleSuccessCode.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;Now that you have the success code, you can exchange it for the authentication token&lt;/p&gt;

&lt;p&gt;And now you finally have a way to get the authentication token and implement Google login.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/65a406f7f3cff48be3c5.js?file=GetToken.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;[3]: &lt;a href=&#34;https://code.msdn.microsoft.com/windowsapps/Web-Authentication-d0485122&#34;&gt;https://code.msdn.microsoft.com/windowsapps/Web-Authentication-d0485122&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Removing unused strings from Windows Phone 8 RESX files</title>
      <link>http://blog.kulman.sk/removing-unused-strings-from-windows-phone-8-resx-files/</link>
      <pubDate>Mon, 25 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kulman.sk/removing-unused-strings-from-windows-phone-8-resx-files/</guid>
      <description>&lt;p&gt;Using RESX files is the standard approach to Windows Phone 8 app localization, it is even contained in the standard project templates. When you work on a project for a longer time, you may get to a situation that your RESX files contain strings that you no longer use. This is a problem especially when you want to add a new localization, because it is slower and kind of wasteful localizing unused strings.&lt;/p&gt;

&lt;p&gt;To solve this problem I have created a simple command line utility, that is [available at Github][1]. This utility assumes that you use the standard localization approach from the templates (AppResources.{lang}.resx and LocalizedStrings.{value} in XAML).&lt;/p&gt;

&lt;p&gt;The usage is really simple. Just run the utility with the path to your project as a parameter. It will detect all resources files and remove all the unused strings from them.&lt;/p&gt;

&lt;p&gt;[1]: &lt;a href=&#34;https://github.com/igorkulman/RemoveUnusedResources&#34;&gt;https://github.com/igorkulman/RemoveUnusedResources&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Custom DateTime deserialization with JSON.NET</title>
      <link>http://blog.kulman.sk/custom-datetime-deserialization-with-json-net/</link>
      <pubDate>Wed, 06 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kulman.sk/custom-datetime-deserialization-with-json-net/</guid>
      <description>&lt;p&gt;Sometimes you cannot influence the design of the API you have to use and wonder, why the API uses so strangely serialized DateTime and how to handle it using JSON.NET.&lt;/p&gt;

&lt;p&gt;Luckily, JSON.NET makes plugging in custom serializers / deserializes quite easy. There are a few base classes to help you write your own converter, when dealing with DateTime you want to inherit the DateTimeConverterBase class.&lt;/p&gt;

&lt;p&gt;There are two methods in this class to override, WriteJson and ReadJson. All you custom serialization and deserialization logic should be placed there.&lt;/p&gt;

&lt;p&gt;Here is a sample implementation:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/31c91704fa93870de4ee.js?file=CustomDateTimeConverter.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;If you want to use your custom converter to serialize or deserialize a property you just need to decorate it with the right attribute.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/igorkulman/31c91704fa93870de4ee.js?file=usage.cs&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
  </channel>
</rss>